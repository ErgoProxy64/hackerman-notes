DABR-003-M
http://10.50.20.75:8000/challenges
https://miro.com/app/board/o9J_klSqCSY=/

student4
Command: ssh student@10.50.33.160 -X
Password: password

Tunnel Ports:
10400-10499

###### 'Fun'damentals

## scapy
sudo scapy    # start scapy
a=Ether()   # create ethernet header
a.show()    # shows stuff
a.type=0x0806   # assign ethernet header
b=ARP()   # create arp header
sendp(a/b, iface="eth0")    # send packet across the wire

## Wireshark
tools > firewall rules    # shows how to write firewall rules

## TcpDump
# use sudo
tcpdump -D    # lists all available interfaces
tcpdump -i eth0   # specify interface "eth0"
tcpdump -xx   # more info
tcpdump -w    # write to a file
tcpdump -r <file>   # read a pcap
tcpdump  port <port#>   # specify port number
tcpdump -n    # shows ip and port number instead of host name and ports protocall
# use Berkeley Packet Filters to parse for specific packets
tcp[<byte2check>] & 0x<bits2check> = 0x<bits>   # breakdown of checking bits using BPF
tcp[13] & 0x11 = 0x11   # example of this ^


###### Network Recon

# Passive Recon: Gathering info without direct interaction
whois <ip>    # gives info on website
dig <website>   # gives IPs for a website, end with SOA to get SOA info, end with TXT to get text stuff
nmap <options> <targetIP/Subnet>    # nmap scan
nmap <ip> -Pn -p <port-range>   # scan for open ports, -Pn don't ping host first 
nc <options> <targetIP> <port>  # netcat can be used to bannergrab
sudo arp    # check arp cache
wget <targetIP> -r    # gets public files from host recursively
# use 'show configuration' to get info on routers or 'show int' for more stream line interface view


###### Data transfer

scp <username>@<IP>:/path/to/file .   # copies file at filepath from IP to current dir
scp /path/to/file <username>@<IP>:/to/location   # copy files to IP
scp -3 <fromUser@<fromIP>:/path/to/file <toUser>@<toIP>:/to/location    # transfer files from remote box to remote box

nc -lp <port>   # sets up listening port, add -v for verbose
nc <IP> <port>    # connects to listening port at IP, can be used to banner grab

nc -lvp <port> < <file>   # set up listening port to send a file from
nc -v -w1 <IP> <port> > <newfilename>   # get file from IP, arrows can be reversed to send the other way

mknod mypipe p    # creates pipe file called "mypipe"
nc <listener1IP> <port1> 0< mypipe | nc <listener2IP> <port2> 1> mypipe   # creates client relay
nc -l -p <port1> < <infile>    # done on listener1, sends info
nc -l -p <port2> > <outfile>   # done on listener2, receives info


###### Tunneling

## ssh local port forwarding
ssh -L <local bind port>:<tgt ip>:<tgt port> -p <alt port> <user>@<pivot ip> -NT

## local port forwarding throug a local port
ssh student@<IP1> -L <port1>:<IP2>:22 -NT   # sets up port on your host to send stuff to IP2 through IP1
ssh student@localhost -p <port1> -L <port2>:<IP3>:80 -NT    # connects to local port to connect through tunnel and sets up another tunnel on IP2 to IP3
firefox localhost:<port2>   # connects through tunnels

## Dynamic port forwarding, allows for the use of scripts and other programs
ssh <user>@<pivot ip> -D 9050 -p <alt port> -NT   # use @localhost when going through tunnels

proxychains ./scan.sh   # use "proxychains" to run tools through dynamic tunnel
proxychains ssh student@<IP>

## remote port forwarding
ssh -p <optional alt port> <user>@<remote ip> -R <remote bind port>:localhost:<tgt port> -NT   # remote IP & port is on your box


###### Net Recon

# Host Discovery (scan script, nmap, nc, ping sweep)
# Port Discovery (scan script, nmap, nc)
# Port Validation (bannergrabing - nc)
# Follow up (based on port found)
  # 22 or 23: connect to it and do passive recon
  # 21 or 80: wget -r <ip> or wget -r ftp://<ip>
  
## pasive recon
# hostname (hostname)
# other listening ports (ss -nltp)
# other interfaces/subnet (ipconfig -or- ip a)
# files of interest (find / -name hint* 2> /dev/null -or- find / -name flag* 2> /dev/null) (open images: eom)
# check for tools (the whole thing is the command): which nmap nc tcpdump wireshark wget telnet
# ping sweep: for i in {1..254}; do (ping -c 1 <first.three.oct>.$i | grep "bytes from" &) ;done

















